{"ast":null,"code":"import { HttpClient } from './httpClient'; // This is the API. The backend root URL can be set from here.\n\nvar API = 'http://localhost:3000/api'; //Setting the todos URI\n\nvar TODO_API = \"\".concat(API, \"/todos\"); // The CRUD Operations of the Todo Resource.\n//Create\n\nvar createTodo = function createTodo(todo) {\n  return HttpClient.post(TODO_API, todo);\n}; //Read\n\n\nvar getTodo = function getTodo() {\n  return HttpClient.get(TODO_API);\n}; //Update\n\n\nvar updateTodo = function updateTodo(todo) {\n  return HttpClient.put(TODO_API, todo);\n}; //Delete\n\n\nvar removeTodo = function removeTodo(todo) {\n  return HttpClient.delete(\"\".concat(TODO_API, \"/\").concat(todo._id));\n}; //Encapsulating in a JSON object\n\n\nvar TodoApi = {\n  createTodo: createTodo,\n  getTodo: getTodo,\n  updateTodo: updateTodo,\n  removeTodo: removeTodo\n};\nexport { TodoApi };","map":{"version":3,"sources":["/Users/andreskim/Desktop/EECS497/CUSTOM_TODO_APP/todoapp-react/src/api/todoApi.js"],"names":["HttpClient","API","TODO_API","createTodo","todo","post","getTodo","get","updateTodo","put","removeTodo","delete","_id","TodoApi"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,cAAzB,C,CAEA;;AAEA,IAAMC,GAAG,GAAG,2BAAZ,C,CAEA;;AAEA,IAAMC,QAAQ,aAAMD,GAAN,WAAd,C,CAEA;AAGA;;AACA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI,EAAI;AACvB,SAAOJ,UAAU,CAACK,IAAX,CAAgBH,QAAhB,EAA0BE,IAA1B,CAAP;AACH,CAFD,C,CAIA;;;AACA,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,SAAON,UAAU,CAACO,GAAX,CAAeL,QAAf,CAAP;AACH,CAFD,C,CAIA;;;AACA,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAAAJ,IAAI,EAAI;AACvB,SAAOJ,UAAU,CAACS,GAAX,CAAeP,QAAf,EAAyBE,IAAzB,CAAP;AACH,CAFD,C,CAIA;;;AACA,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAAAN,IAAI,EAAI;AACvB,SAAOJ,UAAU,CAACW,MAAX,WAAqBT,QAArB,cAAiCE,IAAI,CAACQ,GAAtC,EAAP;AACH,CAFD,C,CAKA;;;AAEA,IAAMC,OAAO,GAAG;AAACV,EAAAA,UAAU,EAAVA,UAAD;AAAaG,EAAAA,OAAO,EAAPA,OAAb;AAAsBE,EAAAA,UAAU,EAAVA,UAAtB;AAAkCE,EAAAA,UAAU,EAAVA;AAAlC,CAAhB;AAEA,SAAQG,OAAR","sourcesContent":["import {HttpClient} from './httpClient'\n\n// This is the API. The backend root URL can be set from here.\n\nconst API = 'http://localhost:3000/api'\n\n//Setting the todos URI\n\nconst TODO_API = `${API}/todos`\n\n// The CRUD Operations of the Todo Resource.\n\n\n//Create\nconst createTodo = todo => {\n    return HttpClient.post(TODO_API, todo)\n}\n\n//Read\nconst getTodo = () => {\n    return HttpClient.get(TODO_API)\n}\n\n//Update\nconst updateTodo = todo => {\n    return HttpClient.put(TODO_API, todo)\n}\n\n//Delete\nconst removeTodo = todo => {\n    return HttpClient.delete(`${TODO_API}/${todo._id}`)\n}\n\n\n//Encapsulating in a JSON object\n\nconst TodoApi = {createTodo, getTodo, updateTodo, removeTodo}\n\nexport {TodoApi}\n"]},"metadata":{},"sourceType":"module"}