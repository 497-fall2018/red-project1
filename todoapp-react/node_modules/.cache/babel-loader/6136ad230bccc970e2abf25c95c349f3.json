{"ast":null,"code":"import _objectSpread from \"/Users/andreskim/Desktop/EECS497/TODO_APP/todoapp-react/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/andreskim/Desktop/EECS497/TODO_APP/todoapp-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andreskim/Desktop/EECS497/TODO_APP/todoapp-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andreskim/Desktop/EECS497/TODO_APP/todoapp-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andreskim/Desktop/EECS497/TODO_APP/todoapp-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andreskim/Desktop/EECS497/TODO_APP/todoapp-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andreskim/Desktop/EECS497/TODO_APP/todoapp-react/src/todos/components/editTodo.js\";\nimport React, { Component } from 'react';\nimport { Button, Icon, Label, Menu, Table } from 'semantic-ui-react';\nimport { Input } from 'semantic-ui-react'; //Import moment library for React Datepicker\n\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nvar EditTodo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditTodo, _Component);\n\n  function EditTodo(props) {\n    var _this;\n\n    _classCallCheck(this, EditTodo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditTodo).call(this, props)); // If props.todo exists this component is used to  Edit a Todo,\n    // else this is a Create New Todo Component\n\n    _this.emptyTodo = function () {\n      return {\n        title: \"\",\n        description: \"\",\n        date: moment()\n      };\n    };\n\n    _this.changeNewTitle = function (event) {\n      _this.setState({\n        title: event.target.value\n      });\n    };\n\n    _this.changeNewDescription = function (event) {\n      _this.setState({\n        description: event.target.value\n      });\n    };\n\n    _this.changeNewDate = function (event) {\n      _this.setState({\n        date: event\n      });\n    };\n\n    _this.createTodo = function (event) {\n      _this.resetTodo();\n\n      _this.props.createTodo(_this.state);\n    };\n\n    _this.editTodo = function (event) {\n      _this.props.editTodo(_this.state);\n    };\n\n    _this.resetTodo = function () {\n      _this.setState({\n        title: \"\",\n        description: \"\",\n        date: moment()\n      });\n    };\n\n    _this.cancelEditing = function () {\n      _this.props.cancelEditing();\n    };\n\n    if (_this.props.todo) {\n      _this.state = _objectSpread({}, _this.props.todo);\n    } else {\n      _this.state = _objectSpread({}, _this.emptyTodo());\n    }\n\n    return _this;\n  } //Initializes a Empty Todo Object\n\n\n  _createClass(EditTodo, [{\n    key: \"getDateForDatePicker\",\n    // Convert the date to moment object for the React DatePicker\n    value: function getDateForDatePicker() {\n      return moment(this.state.date);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Title\",\n        value: this.state.title,\n        onChange: this.changeNewTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Description\",\n        value: this.state.description,\n        onChange: this.changeNewDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        selected: this.getDateForDatePicker(),\n        onChange: this.changeNewDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(Options, {\n        todo: this.props.todo,\n        editTodo: this.editTodo,\n        createTodo: this.createTodo,\n        resetTodo: this.resetTodo,\n        cancelEdit: this.cancelEditing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditTodo;\n}(Component);\n\nexport default EditTodo; // The option component decides the component usage\n\nvar Options = function Options(props) {\n  if (props.todo && props.todo.editing) {\n    return EditOptions(props);\n  } else {\n    return AddOptions(props);\n  }\n}; // The two local components - EditOptions and AddOptions simply maps their events\n// to the state events of their parent compoent through the props\n\n\nvar EditOptions = function EditOptions(props) {\n  return React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"green\",\n    onClick: props.editTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(Button, {\n    color: \"blue\",\n    onClick: props.cancelEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Cancel\"));\n};\n\nvar AddOptions = function AddOptions(props) {\n  return React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"green\",\n    onClick: props.createTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Create\"), React.createElement(Button, {\n    color: \"blue\",\n    onClick: props.resetTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Reset\"));\n};","map":{"version":3,"sources":["/Users/andreskim/Desktop/EECS497/TODO_APP/todoapp-react/src/todos/components/editTodo.js"],"names":["React","Component","Button","Icon","Label","Menu","Table","Input","moment","DatePicker","EditTodo","props","emptyTodo","title","description","date","changeNewTitle","event","setState","target","value","changeNewDescription","changeNewDate","createTodo","resetTodo","state","editTodo","cancelEditing","todo","getDateForDatePicker","Options","editing","EditOptions","AddOptions","cancelEdit"],"mappings":"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","sourcesContent":["\nimport React, {Component} from 'react';\n\nimport {Button, Icon, Label, Menu, Table} from 'semantic-ui-react'\nimport {Input} from 'semantic-ui-react'\n\n//Import moment library for React Datepicker\n\nimport moment from 'moment';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nclass EditTodo extends Component {\n\n    constructor(props) {\n        super(props);\n        // If props.todo exists this component is used to  Edit a Todo,\n        // else this is a Create New Todo Component\n\n        if (this.props.todo) {\n            this.state = {\n                ...this.props.todo\n            }\n        } else {\n            this.state = {\n                ...this.emptyTodo()\n            }\n        }\n    }\n\n    //Initializes a Empty Todo Object\n\n    emptyTodo = () => {\n        return {title: \"\", description: \"\", date: moment()}\n    }\n\n\n    // Input change handling methods\n\n    changeNewTitle = (event) => {\n        this.setState({title: event.target.value})\n    }\n\n    changeNewDescription = (event) => {\n        this.setState({description: event.target.value})\n    }\n\n    changeNewDate = (event) => {\n        this.setState({date: event})\n    }\n\n    // Form submission methods\n\n    createTodo = (event) => {\n        this.resetTodo()\n        this.props.createTodo(this.state)\n    }\n    editTodo = (event) => {\n        this.props.editTodo(this.state)\n    }\n\n\n    // Modifying the inputs indirectly methods\n\n    resetTodo = () => {\n        this.setState({title: \"\", description: \"\", date: moment()})\n    }\n    cancelEditing = () => {\n        this.props.cancelEditing();\n    }\n\n    // Convert the date to moment object for the React DatePicker\n\n    getDateForDatePicker() {\n        return moment(this.state.date)\n    }\n\n    render() {\n        return (\n            <Table.Row>\n\n                <Table.Cell>\n\n                    {/* The Value flows the data from the state to the control */}\n                    {/* The onChange method pass the value from the Control to the State, It takes a method reference */}\n                    {/* In this way a controlled two way binding is established */}\n\n                    <Input\n                        placeholder='Title'\n                        value={this.state.title}\n                        onChange={this.changeNewTitle}/>\n                </Table.Cell>\n\n                <Table.Cell>\n                    <Input\n                        placeholder='Description'\n                        value={this.state.description}\n                        onChange={this.changeNewDescription}/>\n                </Table.Cell>\n\n                <Table.Cell>\n\n                    {/* React Datepicker gets the moment date from the class method */}\n\n                    <DatePicker\n                        selected={this.getDateForDatePicker()}\n                        onChange={this.changeNewDate}/>\n                </Table.Cell>\n\n                {/* The options component takes the inputs and decide if It's an option for a Edit Todo or Add New Todo */}\n\n                <Options\n                    todo={this.props.todo}\n                    editTodo={this.editTodo}\n                    createTodo={this.createTodo}\n                    resetTodo={this.resetTodo}\n                    cancelEdit={this.cancelEditing}\n                />\n\n            </Table.Row>\n        )\n    }\n}\n\nexport default EditTodo;\n\n\n// The option component decides the component usage\n\nconst Options = (props) => {\n    if (props.todo && props.todo.editing) {\n        return EditOptions(props);\n    } else {\n        return AddOptions(props);\n    }\n}\n\n// The two local components - EditOptions and AddOptions simply maps their events\n// to the state events of their parent compoent through the props\n\n\nconst EditOptions = (props) => {\n    return (\n        <Table.Cell>\n            <Button color='green' onClick={props.editTodo}>\n                Edit\n            </Button>\n            < Button color='blue' onClick={props.cancelEdit}>\n                Cancel\n            </Button>\n        </Table.Cell>\n    );\n}\n\nconst AddOptions = (props) => {\n    return (\n        <Table.Cell>\n            <Button color='green' onClick={props.createTodo}>\n                Create\n            </Button>\n            < Button color='blue' onClick={props.resetTodo}>\n                Reset\n            </Button>\n        </Table.Cell>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}