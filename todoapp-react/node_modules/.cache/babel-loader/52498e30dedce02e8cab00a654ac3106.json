{"ast":null,"code":"import _objectSpread from \"/Users/andreskim/Desktop/EECS497/CUSTOM_TODO_APP/todoapp-react/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/andreskim/Desktop/EECS497/CUSTOM_TODO_APP/todoapp-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andreskim/Desktop/EECS497/CUSTOM_TODO_APP/todoapp-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andreskim/Desktop/EECS497/CUSTOM_TODO_APP/todoapp-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andreskim/Desktop/EECS497/CUSTOM_TODO_APP/todoapp-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andreskim/Desktop/EECS497/CUSTOM_TODO_APP/todoapp-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andreskim/Desktop/EECS497/CUSTOM_TODO_APP/todoapp-react/src/todos/containers/todoContainer.js\";\nimport React, { Component } from 'react';\nimport * as TodoActions from '../actions/todoActions';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport TodoTable from '../components/todoTable';\nexport var TodoContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoContainer, _Component);\n\n  function TodoContainer(props) {\n    var _this;\n\n    _classCallCheck(this, TodoContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoContainer).call(this, props));\n\n    _this.createTodo = function (todo) {\n      _this.props.actions.CreateTodo(todo);\n    };\n\n    _this.startEditing = function (id) {\n      _this.props.actions.StartEditing(id);\n    };\n\n    _this.cancelEditing = function (id) {\n      _this.props.actions.CancelEditing(id);\n    };\n\n    _this.editTodo = function (todo) {\n      _this.props.actions.UpdateTodo(todo);\n    };\n\n    _this.completeTodo = function (todo) {\n      _this.props.actions.UpdateTodo(_objectSpread({}, todo, {\n        status: 'done'\n      }));\n    };\n\n    _this.deleteTodo = function (todo) {\n      _this.props.actions.DeleteTodo(todo);\n    };\n\n    return _this;\n  } // Todo Container methods dispatch the actions to the reducer functions. Ordered by CRUD Order\n  //Create\n\n\n  _createClass(TodoContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"todo-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(TodoTable, {\n        todos: this.props.todos,\n        createTodo: this.createTodo,\n        startEditing: this.startEditing,\n        cancelEditing: this.cancelEditing,\n        editTodo: this.editTodo,\n        completeTodo: this.completeTodo,\n        deleteTodo: this.deleteTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodoContainer;\n}(Component); // Define the property types of this Container Component\n\nTodoContainer.propTypes = {\n  actions: PropTypes.object.isRequired,\n  todos: PropTypes.array.isRequired // This maps the state to the property of the component\n\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    todos: state.todos\n  };\n} // This maps the dispatch to the property of the component\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(TodoActions, dispatch)\n  };\n} // The connect function connects the Redux Dispatch and state to the Todo Container Component.\n// Without this the Component wont be functional.\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoContainer);","map":{"version":3,"sources":["/Users/andreskim/Desktop/EECS497/CUSTOM_TODO_APP/todoapp-react/src/todos/containers/todoContainer.js"],"names":["React","Component","TodoActions","bindActionCreators","connect","PropTypes","TodoTable","TodoContainer","props","createTodo","todo","actions","CreateTodo","startEditing","id","StartEditing","cancelEditing","CancelEditing","editTodo","UpdateTodo","completeTodo","status","deleteTodo","DeleteTodo","todos","propTypes","object","isRequired","array","mapStateToProps","state","ownProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAIA,WAAaC,aAAb;AAAA;AAAA;AAAA;;AACI,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN;;AADe,UAOnBC,UAPmB,GAON,UAACC,IAAD,EAAU;AACnB,YAAKF,KAAL,CAAWG,OAAX,CAAmBC,UAAnB,CAA8BF,IAA9B;AACH,KATkB;;AAAA,UAgBnBG,YAhBmB,GAgBJ,UAACC,EAAD,EAAQ;AACnB,YAAKN,KAAL,CAAWG,OAAX,CAAmBI,YAAnB,CAAgCD,EAAhC;AACH,KAlBkB;;AAAA,UAmBnBE,aAnBmB,GAmBH,UAACF,EAAD,EAAQ;AACpB,YAAKN,KAAL,CAAWG,OAAX,CAAmBM,aAAnB,CAAiCH,EAAjC;AACH,KArBkB;;AAAA,UAsBnBI,QAtBmB,GAsBR,UAACR,IAAD,EAAU;AACjB,YAAKF,KAAL,CAAWG,OAAX,CAAmBQ,UAAnB,CAA8BT,IAA9B;AACH,KAxBkB;;AAAA,UAyBnBU,YAzBmB,GAyBJ,UAACV,IAAD,EAAU;AACrB,YAAKF,KAAL,CAAWG,OAAX,CAAmBQ,UAAnB,mBAAkCT,IAAlC;AAAwCW,QAAAA,MAAM,EAAE;AAAhD;AACH,KA3BkB;;AAAA,UA8BnBC,UA9BmB,GA8BN,UAACZ,IAAD,EAAU;AACnB,YAAKF,KAAL,CAAWG,OAAX,CAAmBY,UAAnB,CAA8Bb,IAA9B;AACH,KAhCkB;;AAAA;AAElB,GAHL,CAKI;AAEA;;;AAPJ;AAAA;AAAA,6BAmCa;AACL,aACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWgB,KADtB;AAEI,QAAA,UAAU,EAAE,KAAKf,UAFrB;AAGI,QAAA,YAAY,EAAE,KAAKI,YAHvB;AAII,QAAA,aAAa,EAAE,KAAKG,aAJxB;AAKI,QAAA,QAAQ,EAAE,KAAKE,QALnB;AAMI,QAAA,YAAY,EAAI,KAAKE,YANzB;AAOI,QAAA,UAAU,EAAI,KAAKE,UAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAaH;AAjDL;;AAAA;AAAA,EAAmCrB,SAAnC,E,CAoDA;;AAEAM,aAAa,CAACkB,SAAd,GAA0B;AACtBd,EAAAA,OAAO,EAAEN,SAAS,CAACqB,MAAV,CAAiBC,UADJ;AAEtBH,EAAAA,KAAK,EAAEnB,SAAS,CAACuB,KAAV,CAAgBD,UAFD,CAK1B;;AAL0B,CAA1B;;AAOA,SAASE,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACtC,SAAO;AACHP,IAAAA,KAAK,EAAEM,KAAK,CAACN;AADV,GAAP;AAGH,C,CAED;;;AAEA,SAASQ,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHtB,IAAAA,OAAO,EAAER,kBAAkB,CAACD,WAAD,EAAc+B,QAAd;AADxB,GAAP;AAGH,C,CAED;AACA;;;AAEA,eAAe7B,OAAO,CAACyB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CzB,aAA7C,CAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport * as TodoActions from '../actions/todoActions'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux'\nimport { PropTypes } from 'prop-types'\nimport TodoTable from '../components/todoTable';\n\n\n\nexport class TodoContainer extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    // Todo Container methods dispatch the actions to the reducer functions. Ordered by CRUD Order\n\n    //Create\n    createTodo = (todo) => {\n        this.props.actions.CreateTodo(todo)\n    }\n\n\n    // No methods for reading, the first loading of data is done in App.js where the\n    // getTodo Action is dispatched\n\n    //Update\n    startEditing = (id) => {\n        this.props.actions.StartEditing(id)\n    }\n    cancelEditing = (id) => {\n        this.props.actions.CancelEditing(id)\n    }\n    editTodo = (todo) => {\n        this.props.actions.UpdateTodo(todo)\n    }\n    completeTodo = (todo) => {\n        this.props.actions.UpdateTodo({...todo, status: 'done'})\n    }\n\n    //Delete\n    deleteTodo = (todo) => {\n        this.props.actions.DeleteTodo(todo)\n    }\n\n    render() {\n        return (\n            <div className=\"todo-container\">\n                <TodoTable\n                    todos={this.props.todos}\n                    createTodo={this.createTodo}\n                    startEditing={this.startEditing}\n                    cancelEditing={this.cancelEditing}\n                    editTodo={this.editTodo}\n                    completeTodo = {this.completeTodo}\n                    deleteTodo = {this.deleteTodo}\n                />\n            </div>\n        );\n    }\n}\n\n// Define the property types of this Container Component\n\nTodoContainer.propTypes = {\n    actions: PropTypes.object.isRequired,\n    todos: PropTypes.array.isRequired\n}\n\n// This maps the state to the property of the component\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        todos: state.todos\n    }\n}\n\n// This maps the dispatch to the property of the component\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators(TodoActions, dispatch)\n    }\n}\n\n// The connect function connects the Redux Dispatch and state to the Todo Container Component.\n// Without this the Component wont be functional.\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoContainer);\n"]},"metadata":{},"sourceType":"module"}