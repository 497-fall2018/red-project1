{"ast":null,"code":"var _jsxFileName = \"/Users/andreskim/Desktop/EECS497/Project1-TodoApp/todoapp-react/src/todos/components/todoTable.js\";\nimport React, { Component } from 'react';\nimport { Button, Icon, Label, Menu, Table } from 'semantic-ui-react';\nimport TodoRow from './todoRow';\nimport EditTodo from './editTodo'; // TodoTable is a Stateless component\n\nvar TodoTable = function TodoTable(props) {\n  return React.createElement(Table, {\n    celled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Title\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Description\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Date\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Options\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.todos.map(function (t) {\n    // If the todo is being edited, EditTodo Component is rendered here\n    if (t.editing) {\n      return React.createElement(EditTodo, {\n        editTodo: props.editTodo,\n        cancelEditing: function cancelEditing(e) {\n          return props.cancelEditing(t._id);\n        },\n        key: t._id,\n        todo: t,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    } else {\n      // Is the todo is not being edited the TodoRow stateless component is returned\n      return React.createElement(TodoRow, {\n        todo: t,\n        key: t._id,\n        completeTodo: function completeTodo(e) {\n          return props.completeTodo(t);\n        },\n        startEditing: function startEditing(e) {\n          return props.startEditing(t._id);\n        },\n        deleteTodo: function deleteTodo(e) {\n          return props.deleteTodo(t);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }\n  }), React.createElement(EditTodo, {\n    createTodo: props.createTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })));\n};\n\nexport default TodoTable;","map":{"version":3,"sources":["/Users/andreskim/Desktop/EECS497/Project1-TodoApp/todoapp-react/src/todos/components/todoTable.js"],"names":["React","Component","Button","Icon","Label","Menu","Table","TodoRow","EditTodo","TodoTable","props","todos","map","t","editing","editTodo","e","cancelEditing","_id","completeTodo","startEditing","deleteTodo","createTodo"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,IAA7B,EAAmCC,KAAnC,QAA+C,mBAA/C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAGA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AACzB,SAEI,oBAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAII,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,CADJ,CADJ,EAUI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKA,KAAK,CACDC,KADJ,CAEIC,GAFJ,CAEQ,UAAAC,CAAC,EAAI;AAEN;AAEA,QAAIA,CAAC,CAACC,OAAN,EAAe;AACX,aAAO,oBAAC,QAAD;AACH,QAAA,QAAQ,EAAEJ,KAAK,CAACK,QADb;AAEH,QAAA,aAAa,EAAE,uBAAAC,CAAC;AAAA,iBAAIN,KAAK,CAACO,aAAN,CAAoBJ,CAAC,CAACK,GAAtB,CAAJ;AAAA,SAFb;AAGH,QAAA,GAAG,EAAEL,CAAC,CAACK,GAHJ;AAIH,QAAA,IAAI,EAAEL,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAKH,KAND,MAMO;AAEH;AAEA,aAAO,oBAAC,OAAD;AACH,QAAA,IAAI,EAAEA,CADH;AAEH,QAAA,GAAG,EAAEA,CAAC,CAACK,GAFJ;AAGH,QAAA,YAAY,EAAE,sBAAAF,CAAC;AAAA,iBAAIN,KAAK,CAACS,YAAN,CAAmBN,CAAnB,CAAJ;AAAA,SAHZ;AAIH,QAAA,YAAY,EAAE,sBAAAG,CAAC;AAAA,iBAAIN,KAAK,CAACU,YAAN,CAAmBP,CAAC,CAACK,GAArB,CAAJ;AAAA,SAJZ;AAKH,QAAA,UAAU,EAAE,oBAAAF,CAAC;AAAA,iBAAGN,KAAK,CAACW,UAAN,CAAiBR,CAAjB,CAAH;AAAA,SALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAOH;AACJ,GAxBJ,CAJL,EAiCI,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAEH,KAAK,CAACY,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCJ,CAVJ,CAFJ;AAkDH,CAnDD;;AAqDA,eAAeb,SAAf","sourcesContent":["\nimport React, {Component} from 'react';\n\nimport {Button, Icon, Label, Menu, Table} from 'semantic-ui-react'\nimport TodoRow from './todoRow'\nimport EditTodo from './editTodo'\n\n\n// TodoTable is a Stateless component\n\nconst TodoTable = (props) => {\n    return (\n\n        <Table celled>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Title</Table.HeaderCell>\n                    <Table.HeaderCell>Description</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                    <Table.HeaderCell>Options</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n\n                {/* This maps the todos recieved as a prop */}\n\n                {props\n                    .todos\n                    .map(t => {\n\n                        // If the todo is being edited, EditTodo Component is rendered here\n\n                        if (t.editing) {\n                            return <EditTodo\n                                editTodo={props.editTodo}\n                                cancelEditing={e => props.cancelEditing(t._id)}\n                                key={t._id}\n                                todo={t}/>\n                        } else {\n\n                            // Is the todo is not being edited the TodoRow stateless component is returned\n\n                            return <TodoRow\n                                todo={t}\n                                key={t._id}\n                                completeTodo={e => props.completeTodo(t)}\n                                startEditing={e => props.startEditing(t._id)}\n                                deleteTodo={e=> props.deleteTodo(t)}\n                            />\n                        }\n                    })}\n\n                {/* This EditTodo component is used as a Create new Todo Component */}\n                {/* Thus by using the same component for both use, we can reuse a lot of the codes */}\n\n                <EditTodo createTodo={props.createTodo} />\n            </Table.Body>\n\n        </Table>\n    )\n}\n\nexport default TodoTable;\n"]},"metadata":{},"sourceType":"module"}