{"ast":null,"code":"//Import the Todo API\nimport { TodoApi } from \"../../api/todoApi\"; // These are the action type constants. Ordered by CRUD order.\n// There is a pattern of Action, Action_Success, Action_Error action types for the Async actions.\n//Create\n\nexport var CREATE_TODO = '[Todo] CREATE_TODO';\nexport var CREATE_TODO_SUCCESS = '[Todo] CREATE_TODO_SUCCESS';\nexport var CREATE_TODO_ERROR = '[Todo] CREATE_TODO_ERROR'; //Read\n\nexport var GET_TODOS = '[Todo] GET_TODOS';\nexport var GET_TODOS_SUCCESS = '[Todo] GET_TODOS_SUCCESS';\nexport var GET_TODOS_ERROR = '[Todo] GET_TODOS_ERROR'; //Update\n\nexport var START_EDITING = '[Todo] START_EDITING';\nexport var CANCEL_EDITING = '[Todo] CANCEL_EDITING';\nexport var UPDATE_TODO = '[Todo] UPDATE_TODO';\nexport var UPDATE_TODO_SUCCESS = '[Todo] UPDATE_TODO_SUCCESS';\nexport var UPDATE_TODO_ERROR = '[Todo] UPDATE_TODO_ERROR';\nexport var COMPLETE_TODO = 'COMPLETE_TODO'; //Delete\n\nexport var DELETE_TODO = '[Todo] DELETE_TODO';\nexport var DELETE_TODO_SUCCESS = '[Todo] DELETE_TODO_SUCCESS';\nexport var DELETE_TODO_ERROR = '[Todo] DELETE_TODO_ERROR'; //These are the action types Also ordered in CRUD Order.\n//Create\n//The dispatch and getstate function is provided by the Redux-Thunk middleware, we can dispatch actions with it.\n\nexport function CreateTodo(todo) {\n  return function (dispatch, getState) {\n    return TodoApi.createTodo(todo).then(function (res) {\n      dispatch(CreateTodoSuccess(res.data.data));\n    });\n  };\n}\nexport function CreateTodoSuccess(todo) {\n  return {\n    type: CREATE_TODO_SUCCESS,\n    todo: todo\n  };\n} //Read\n\nexport function GetTodos() {\n  return function (dispactch, getState) {\n    return TodoApi.getTodo().then(function (res) {\n      dispactch(GetTodoSuccess(res));\n    });\n  };\n}\nexport function GetTodoSuccess(todos) {\n  return {\n    type: GET_TODOS_SUCCESS,\n    todos: todos\n  };\n} //Update\n\nexport function StartEditing(_id) {\n  return {\n    type: START_EDITING,\n    _id: _id\n  };\n}\nexport function CancelEditing(_id) {\n  return {\n    type: CANCEL_EDITING,\n    _id: _id\n  };\n}\nexport function UpdateTodo(todo) {\n  return function (dispatch, getState) {\n    //Multiple actions can be sent usign the Redux-Thunk middleware\n    dispatch({\n      type: UPDATE_TODO,\n      todo: todo\n    });\n    TodoApi.updateTodo(todo).then(function (res) {\n      dispatch(UpdateTodoSuccess(res.data.data));\n    });\n  };\n}\nexport function UpdateTodoSuccess(todo) {\n  return {\n    type: UPDATE_TODO_SUCCESS,\n    todo: todo,\n    _id: todo._id\n  };\n} //Delete\n\nexport function DeleteTodo(todo) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: DELETE_TODO,\n      todo: todo\n    });\n    TodoApi.removeTodo(todo).then(function (res) {\n      if (res.status == 204) {\n        dispatch(DeleteTodoSuccess(todo));\n      }\n    });\n  };\n}\nexport function DeleteTodoSuccess(todo) {\n  return {\n    type: DELETE_TODO_SUCCESS,\n    todo: todo,\n    _id: todo._id\n  };\n}","map":{"version":3,"sources":["/Users/andreskim/Desktop/EECS497/TODO_APP/todoapp-react/src/todos/actions/todoActions.js"],"names":["TodoApi","CREATE_TODO","CREATE_TODO_SUCCESS","CREATE_TODO_ERROR","GET_TODOS","GET_TODOS_SUCCESS","GET_TODOS_ERROR","START_EDITING","CANCEL_EDITING","UPDATE_TODO","UPDATE_TODO_SUCCESS","UPDATE_TODO_ERROR","COMPLETE_TODO","DELETE_TODO","DELETE_TODO_SUCCESS","DELETE_TODO_ERROR","CreateTodo","todo","dispatch","getState","createTodo","then","res","CreateTodoSuccess","data","type","GetTodos","dispactch","getTodo","GetTodoSuccess","todos","StartEditing","_id","CancelEditing","UpdateTodo","updateTodo","UpdateTodoSuccess","DeleteTodo","removeTodo","status","DeleteTodoSuccess"],"mappings":"AAAA;AAEA,SAASA,OAAT,QAAwB,mBAAxB,C,CAGA;AACA;AAIA;;AACA,OAAO,IAAMC,WAAW,GAAG,oBAApB;AACP,OAAO,IAAMC,mBAAmB,GAAG,4BAA5B;AACP,OAAO,IAAMC,iBAAiB,GAAG,0BAA1B,C,CAGP;;AACA,OAAO,IAAMC,SAAS,GAAG,kBAAlB;AACP,OAAO,IAAMC,iBAAiB,GAAG,0BAA1B;AACP,OAAO,IAAMC,eAAe,GAAG,wBAAxB,C,CAGP;;AACA,OAAO,IAAMC,aAAa,GAAE,sBAArB;AACP,OAAO,IAAMC,cAAc,GAAG,uBAAvB;AAEP,OAAO,IAAMC,WAAW,GAAG,oBAApB;AACP,OAAO,IAAMC,mBAAmB,GAAG,4BAA5B;AACP,OAAO,IAAMC,iBAAiB,GAAG,0BAA1B;AAEP,OAAO,IAAMC,aAAa,GAAG,eAAtB,C,CAGP;;AACA,OAAO,IAAMC,WAAW,GAAG,oBAApB;AACP,OAAO,IAAMC,mBAAmB,GAAG,4BAA5B;AACP,OAAO,IAAMC,iBAAiB,GAAG,0BAA1B,C,CAKP;AAEA;AAEA;;AAEA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AAC5B,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC3B,WAAOnB,OAAO,CAACoB,UAAR,CAAmBH,IAAnB,EAAyBI,IAAzB,CAA8B,UAAAC,GAAG,EAAI;AACxCJ,MAAAA,QAAQ,CAACK,iBAAiB,CAACD,GAAG,CAACE,IAAJ,CAASA,IAAV,CAAlB,CAAR;AACH,KAFM,CAAP;AAGH,GAJD;AAKH;AAED,OAAO,SAASD,iBAAT,CAA2BN,IAA3B,EAAgC;AACnC,SAAO;AACHQ,IAAAA,IAAI,EAACvB,mBADF;AAEHe,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,C,CAGD;;AACA,OAAO,SAASS,QAAT,GAAmB;AACtB,SAAO,UAACC,SAAD,EAAYR,QAAZ,EAAyB;AAC5B,WAAOnB,OAAO,CAAC4B,OAAR,GAAkBP,IAAlB,CAAuB,UAAAC,GAAG,EAAI;AACjCK,MAAAA,SAAS,CAACE,cAAc,CAACP,GAAD,CAAf,CAAT;AACH,KAFM,CAAP;AAGH,GAJD;AAKH;AAED,OAAO,SAASO,cAAT,CAAwBC,KAAxB,EAA8B;AACjC,SAAO;AACHL,IAAAA,IAAI,EAACpB,iBADF;AAEHyB,IAAAA,KAAK,EAALA;AAFG,GAAP;AAIH,C,CAGD;;AACA,OAAO,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AAC9B,SAAO;AACHP,IAAAA,IAAI,EAAElB,aADH;AAEHyB,IAAAA,GAAG,EAAHA;AAFG,GAAP;AAIH;AACD,OAAO,SAASC,aAAT,CAAuBD,GAAvB,EAA4B;AAC/B,SAAO;AACHP,IAAAA,IAAI,EAAEjB,cADH;AAEHwB,IAAAA,GAAG,EAAHA;AAFG,GAAP;AAIH;AAED,OAAO,SAASE,UAAT,CAAoBjB,IAApB,EAA0B;AAC7B,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAE3B;AAEAD,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEhB,WADD;AAELQ,MAAAA,IAAI,EAAJA;AAFK,KAAD,CAAR;AAIAjB,IAAAA,OAAO,CAACmC,UAAR,CAAmBlB,IAAnB,EAAyBI,IAAzB,CAA8B,UAAAC,GAAG,EAAI;AACjCJ,MAAAA,QAAQ,CAACkB,iBAAiB,CAACd,GAAG,CAACE,IAAJ,CAASA,IAAV,CAAlB,CAAR;AACH,KAFD;AAGH,GAXD;AAYH;AACD,OAAO,SAASY,iBAAT,CAA2BnB,IAA3B,EAAiC;AACpC,SAAO;AACHQ,IAAAA,IAAI,EAAEf,mBADH;AAEHO,IAAAA,IAAI,EAAJA,IAFG;AAGHe,IAAAA,GAAG,EAAEf,IAAI,CAACe;AAHP,GAAP;AAKH,C,CAGD;;AACA,OAAO,SAASK,UAAT,CAAoBpB,IAApB,EAA0B;AAC7B,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEZ,WADD;AAELI,MAAAA,IAAI,EAAJA;AAFK,KAAD,CAAR;AAIAjB,IAAAA,OAAO,CAACsC,UAAR,CAAmBrB,IAAnB,EAAyBI,IAAzB,CAA8B,UAAAC,GAAG,EAAI;AACjC,UAAIA,GAAG,CAACiB,MAAJ,IAAc,GAAlB,EAAuB;AACnBrB,QAAAA,QAAQ,CAACsB,iBAAiB,CAACvB,IAAD,CAAlB,CAAR;AACH;AACJ,KAJD;AAKH,GAVD;AAWH;AACD,OAAO,SAASuB,iBAAT,CAA2BvB,IAA3B,EAAiC;AACpC,SAAO;AACHQ,IAAAA,IAAI,EAAEX,mBADH;AAEHG,IAAAA,IAAI,EAAJA,IAFG;AAGHe,IAAAA,GAAG,EAAEf,IAAI,CAACe;AAHP,GAAP;AAKH","sourcesContent":["//Import the Todo API\n\nimport { TodoApi } from \"../../api/todoApi\";\n\n\n// These are the action type constants. Ordered by CRUD order.\n// There is a pattern of Action, Action_Success, Action_Error action types for the Async actions.\n\n\n\n//Create\nexport const CREATE_TODO = '[Todo] CREATE_TODO'\nexport const CREATE_TODO_SUCCESS = '[Todo] CREATE_TODO_SUCCESS'\nexport const CREATE_TODO_ERROR = '[Todo] CREATE_TODO_ERROR'\n\n\n//Read\nexport const GET_TODOS = '[Todo] GET_TODOS'\nexport const GET_TODOS_SUCCESS = '[Todo] GET_TODOS_SUCCESS'\nexport const GET_TODOS_ERROR = '[Todo] GET_TODOS_ERROR'\n\n\n//Update\nexport const START_EDITING ='[Todo] START_EDITING'\nexport const CANCEL_EDITING = '[Todo] CANCEL_EDITING'\n\nexport const UPDATE_TODO = '[Todo] UPDATE_TODO'\nexport const UPDATE_TODO_SUCCESS = '[Todo] UPDATE_TODO_SUCCESS'\nexport const UPDATE_TODO_ERROR = '[Todo] UPDATE_TODO_ERROR'\n\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\n\n\n//Delete\nexport const DELETE_TODO = '[Todo] DELETE_TODO'\nexport const DELETE_TODO_SUCCESS = '[Todo] DELETE_TODO_SUCCESS'\nexport const DELETE_TODO_ERROR = '[Todo] DELETE_TODO_ERROR'\n\n\n\n\n//These are the action types Also ordered in CRUD Order.\n\n//Create\n\n//The dispatch and getstate function is provided by the Redux-Thunk middleware, we can dispatch actions with it.\n\nexport function CreateTodo(todo){\n    return (dispatch, getState) => {\n        return TodoApi.createTodo(todo).then(res => {\n            dispatch(CreateTodoSuccess(res.data.data))\n        })\n    }\n}\n\nexport function CreateTodoSuccess(todo){\n    return {\n        type:CREATE_TODO_SUCCESS,\n        todo\n    }\n}\n\n\n//Read\nexport function GetTodos(){\n    return (dispactch, getState) => {\n        return TodoApi.getTodo().then(res => {\n            dispactch(GetTodoSuccess(res))\n        })\n    }\n}\n\nexport function GetTodoSuccess(todos){\n    return {\n        type:GET_TODOS_SUCCESS,\n        todos\n    }\n}\n\n\n//Update\nexport function StartEditing(_id) {\n    return {\n        type: START_EDITING,\n        _id\n    }\n}\nexport function CancelEditing(_id) {\n    return {\n        type: CANCEL_EDITING,\n        _id\n    }\n}\n\nexport function UpdateTodo(todo) {\n    return (dispatch, getState) => {\n\n        //Multiple actions can be sent usign the Redux-Thunk middleware\n\n        dispatch({\n            type: UPDATE_TODO,\n            todo\n        })\n        TodoApi.updateTodo(todo).then(res => {\n            dispatch(UpdateTodoSuccess(res.data.data))\n        })\n    }\n}\nexport function UpdateTodoSuccess(todo) {\n    return {\n        type: UPDATE_TODO_SUCCESS,\n        todo,\n        _id: todo._id\n    }\n}\n\n\n//Delete\nexport function DeleteTodo(todo) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: DELETE_TODO,\n            todo\n        })\n        TodoApi.removeTodo(todo).then(res => {\n            if (res.status == 204) {\n                dispatch(DeleteTodoSuccess(todo))\n            }\n        })\n    }\n}\nexport function DeleteTodoSuccess(todo) {\n    return {\n        type: DELETE_TODO_SUCCESS,\n        todo,\n        _id: todo._id\n    }\n}\n"]},"metadata":{},"sourceType":"module"}