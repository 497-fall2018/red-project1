{"ast":null,"code":"var _jsxFileName = \"/Users/andreskim/Desktop/EECS497/TODO_APP/todoapp-react/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\"; //Import the modified App.css\n\nimport './App.css'; // Import the Routes component, which contains our Route setup\n\nimport { Routes } from './Routes'; // Provider component is a react-redux component for setting up the Redux Store\n\nimport { Provider } from 'react-redux'; // Import the ConfigureStore that holds the initial Configuration\n\nimport { configureStore } from './store/configureStore';\nimport * as TodoActions from './todos/actions/todoActions';\nimport AppBar from 'material-ui/AppBar'; // Create a Store from the Configuration, we can pass a Initial State here\n\nvar store = configureStore(); // At first dispatch a Get Todos Actions, So we'll recieve the Todos \n// fetched from the server at the start of the app\n\nstore.dispatch(TodoActions.GetTodos());\n\nvar App = function App(props) {\n  return (//Provider needs to contain all the Containers/Components it will give access to the Store\n    React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Routes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }))\n  );\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/andreskim/Desktop/EECS497/TODO_APP/todoapp-react/src/App.js"],"names":["React","Component","Routes","Provider","configureStore","TodoActions","AppBar","store","dispatch","GetTodos","App","props"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;+BAGA;;AACA,OAAO,WAAP,C,CAEA;;AAEA,SAASC,MAAT,QAAuB,UAAvB,C,CAGA;;AAEA,SAASC,QAAT,QAAyB,aAAzB,C,CAEA;;AAEA,SAASC,cAAT,QAA+B,wBAA/B;AAEA,OAAO,KAAKC,WAAZ,MAA6B,6BAA7B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB,C,CAGA;;AAEA,IAAMC,KAAK,GAAGH,cAAc,EAA5B,C,CAEA;AACA;;AAEAG,KAAK,CAACC,QAAN,CAAeH,WAAW,CAACI,QAAZ,EAAf;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACrB,SAEE;AAEE,wBAAC,QAAD;AAAU,MAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAJJ;AAQD,CATD;;AAWA,eAAeG,GAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\n\n//Import the modified App.css\nimport './App.css';\n\n// Import the Routes component, which contains our Route setup\n\nimport { Routes } from './Routes'\n\n\n// Provider component is a react-redux component for setting up the Redux Store\n\nimport { Provider } from 'react-redux'\n\n// Import the ConfigureStore that holds the initial Configuration\n\nimport { configureStore } from './store/configureStore'\n\nimport * as TodoActions from './todos/actions/todoActions'\n\nimport AppBar from 'material-ui/AppBar';\n\n\n// Create a Store from the Configuration, we can pass a Initial State here\n\nconst store = configureStore()\n\n// At first dispatch a Get Todos Actions, So we'll recieve the Todos \n// fetched from the server at the start of the app\n\nstore.dispatch(TodoActions.GetTodos())\n\nconst App = (props) => {\n  return (\n\n    //Provider needs to contain all the Containers/Components it will give access to the Store\n\n      <Provider store={store} >\n        <Routes />\n      </Provider>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}